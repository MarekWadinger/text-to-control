name: CI
permissions:
  contents: read

on:
  push:
    branches: [ main, dev ]
    paths-ignore:
      - 'VERSION'
      - 'pyproject.toml'
      - 'CHANGELOG.md'
      - '.github/workflows/**'
  pull_request:
    branches: [ main, dev ]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        version: "latest"
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Set up Python
      run: uv python install 3.13

    - name: Install dependencies
      run: uv sync --group lint

    - name: Lint with ruff
      run: uv run ruff check .

    - name: Type check with mypy
      run: uv run ty check .

    - name: Minimize uv cache
      run: uv cache prune --ci

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        version: "latest"
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: uv sync --group test

    - name: Test with pytest
      run: uv run pytest --cov=text-to-control --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.13'
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Minimize uv cache
      run: uv cache prune --ci
